#Using Debian12 image built with microsoft dotnetcore environment
ARG REPO=mcr.microsoft.com/dotnet/runtime

# Installer image
FROM amd64/buildpack-deps:bookworm-curl AS installer

# Retrieve ASP.NET Core
RUN aspnetcore_version=7.0.9 \
    && curl -fSL --output aspnetcore.tar.gz https://dotnetcli.azureedge.net/dotnet/aspnetcore/Runtime/$aspnetcore_version/aspnetcore-runtime-$aspnetcore_version-linux-x64.tar.gz \
    && aspnetcore_sha512='aabf4fa5ca726dc52774e5d644800ef7477815b22a982b7a2752dec6569186aabca93d5386e195e7ead377144601a786ae6a5d76ff28435bdabfad495cfe554b' \
    && echo "$aspnetcore_sha512  aspnetcore.tar.gz" | sha512sum -c - \
    && tar -oxzf aspnetcore.tar.gz ./shared/Microsoft.AspNetCore.App \
    && rm aspnetcore.tar.gz

# ASP.NET Core image
FROM $REPO:7.0.9-bookworm-slim-amd64

# ASP.NET Core version
ENV ASPNET_VERSION=7.0.9

COPY --from=installer ["/shared/Microsoft.AspNetCore.App", "/usr/share/dotnet/shared/Microsoft.AspNetCore.App"]

# install management tools for listing processes in container
#RUN add-apt-repository -y ppa:wireshark-dev/stable
RUN apt-get update && apt-get install -y procps iproute2 net-tools iputils-ping iputils-tracepath mtr openssl sudo tshark && rm -rf /var/lib/apt/lists/*

#create non-root account to run container
ENV USER=testuser
ENV PASSWORD=password
RUN groupadd -g 1000 ${USER}
RUN useradd -u 1000 -ms /bin/bash -g 1000 -p $(openssl passwd -1 $PASSWORD) ${USER}

#Note, the following line adds the user account to the sudoers file... this allows them to escalate privileges to root
RUN usermod -aG sudo ${USER}

# change user to non-root account 
#USER ${USER}